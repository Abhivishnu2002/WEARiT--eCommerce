<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Verify OTP - WEARiT</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            rel="stylesheet"
        />
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css"
        />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
        <style>
            :root {
                --primary-color: #000;
                --secondary-color: #f8f9fa;
                --accent-color: #6c757d;
                --text-dark: #212529;
                --text-light: #6c757d;
                --border-color: #e9ecef;
                --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.05);
                --shadow-medium: 0 4px 20px rgba(0, 0, 0, 0.1);
                --shadow-heavy: 0 8px 30px rgba(0, 0, 0, 0.15);
                --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            }

            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            body {
                font-family: "Inter", sans-serif;
                background: #f8f9fa;
                min-height: 100vh;
                overflow-x: hidden;
            }

            .auth-container {
                min-height: 100vh;
                display: flex;
            }

            .auth-image-section {
                flex: 1;
                background: var(--gradient-primary);
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center;
                overflow: hidden;
            }

            .auth-image-section::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.4);
                z-index: 1;
            }

            .auth-image-section::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" fill="white" opacity="0.05"><circle cx="50" cy="50" r="2"/><circle cx="20" cy="20" r="1"/><circle cx="80" cy="20" r="1"/><circle cx="20" cy="80" r="1"/><circle cx="80" cy="80" r="1"/></svg>');
                background-size: 50px 50px;
                z-index: 1;
            }

            .auth-image {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }

            .auth-image-content {
                position: relative;
                z-index: 2;
                text-align: center;
                color: white;
                padding: 2rem;
                max-width: 500px;
            }

            .auth-image-title {
                font-size: 3rem;
                font-weight: 800;
                margin-bottom: 1rem;
                letter-spacing: -0.02em;
            }

            .auth-image-subtitle {
                font-size: 1.2rem;
                opacity: 0.9;
                line-height: 1.6;
            }

            .auth-form-section {
                flex: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 2rem;
                background: white;
            }

            .auth-form-container {
                width: 100%;
                max-width: 500px;
                text-align: center;
            }

            .brand-logo {
                text-align: center;
                margin-bottom: 2rem;
            }

            .brand-name {
                font-size: 2.5rem;
                font-weight: 800;
                color: var(--text-dark);
                margin-bottom: 0.5rem;
                letter-spacing: -0.02em;
            }

            .brand-tagline {
                font-size: 0.9rem;
                color: var(--text-light);
                margin-bottom: 0;
            }

            .auth-header {
                text-align: center;
                margin-bottom: 2rem;
            }

            .auth-title {
                font-size: 2rem;
                font-weight: 700;
                color: var(--text-dark);
                margin-bottom: 0.5rem;
                letter-spacing: -0.01em;
            }

            .auth-subtitle {
                font-size: 1rem;
                color: var(--text-light);
                margin-bottom: 0;
                line-height: 1.5;
            }

            .email-highlight {
                font-weight: 600;
                color: var(--primary-color);
                display: block;
                margin-top: 0.5rem;
            }

            .otp-input-container {
                display: flex;
                justify-content: center;
                gap: 12px;
                margin: 2rem 0;
            }

            .otp-input {
                width: 60px;
                height: 60px;
                border: 2px solid var(--border-color);
                border-radius: 12px;
                text-align: center;
                font-size: 1.5rem;
                font-weight: 700;
                color: var(--text-dark);
                transition: all 0.3s ease;
                background: white;
                box-shadow: var(--shadow-light);
            }

            .otp-input:focus {
                border-color: var(--primary-color);
                outline: none;
                box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
                transform: translateY(-2px);
            }

            .otp-input:hover {
                transform: translateY(-1px);
                box-shadow: var(--shadow-medium);
            }

            .otp-input.is-invalid {
                border-color: #ef4444;
                box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
                animation: modernShake 0.4s ease-in-out;
            }

            .otp-input.is-valid {
                border-color: #10b981;
                box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
            }

            .invalid-feedback {
                display: none !important;
                width: 100%;
                margin-top: 1rem;
                font-size: 0.875rem;
                color: #dc2626;
                font-weight: 500;
                padding: 0.875rem 1rem;
                background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
                border: 1px solid #fecaca;
                border-radius: 12px;
                position: relative;
                overflow: hidden;
                box-shadow: 0 2px 8px rgba(220, 38, 38, 0.1);
            }

            .invalid-feedback::before {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                bottom: 0;
                width: 4px;
                background: linear-gradient(180deg, #dc2626 0%, #ef4444 100%);
                border-radius: 0 2px 2px 0;
            }

            .invalid-feedback.show {
                display: block !important;
                animation: slideInDown 0.4s ease;
            }

            .resend-container {
                margin: 2rem 0;
                padding: 1.5rem;
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                border-radius: 12px;
                border: 1px solid var(--border-color);
            }

            .resend-text {
                font-size: 0.9rem;
                color: var(--text-light);
                margin-bottom: 0.5rem;
            }

            #timer {
                font-weight: 700;
                color: var(--primary-color);
                font-size: 1.1rem;
            }

            .no-code {
                font-size: 0.9rem;
                color: var(--text-light);
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.5rem;
                margin-top: 0.5rem;
            }

            .resend-btn {
                background: none;
                border: none;
                color: var(--primary-color);
                font-weight: 600;
                cursor: pointer;
                padding: 0;
                font-size: 0.9rem;
                text-decoration: underline;
                transition: color 0.3s ease;
            }

            .resend-btn:hover:not(:disabled) {
                color: var(--text-dark);
            }

            .resend-btn:disabled {
                color: #9ca3af;
                cursor: not-allowed;
                text-decoration: none;
            }

            .auth-btn {
                width: 100%;
                padding: 0.875rem 1.5rem;
                font-size: 1rem;
                font-weight: 600;
                border-radius: 12px;
                border: none;
                background: var(--primary-color);
                color: white;
                transition: all 0.3s ease;
                margin-bottom: 1.5rem;
                position: relative;
                overflow: hidden;
            }

            .auth-btn:hover:not(:disabled) {
                background: #333;
                transform: translateY(-2px);
                box-shadow: var(--shadow-heavy);
            }

            .auth-btn:active {
                transform: translateY(0);
            }

            .auth-btn:disabled {
                opacity: 0.7;
                cursor: not-allowed;
                transform: none;
                position: relative;
                overflow: hidden;
            }

            .auth-btn:disabled::after {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
                animation: shimmer 1.5s infinite;
            }

            @keyframes shimmer {
                0% { left: -100%; }
                100% { left: 100%; }
            }

            .btn-spinner {
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .auth-link {
                text-align: center;
                margin-top: 1.5rem;
            }

            .auth-link p {
                font-size: 0.9rem;
                color: var(--text-light);
                margin-bottom: 0;
            }

            .auth-link a {
                color: var(--primary-color);
                text-decoration: none;
                font-weight: 600;
                transition: color 0.3s ease;
            }

            .auth-link a:hover {
                color: var(--text-dark);
                text-decoration: underline;
            }

            .alert {
                border-radius: 12px;
                margin-bottom: 1.5rem;
                border: none;
                padding: 1rem 1.25rem;
                font-weight: 500;
            }

            .alert-success {
                background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
                color: #166534;
                border-left: 4px solid #22c55e;
            }

            .alert-danger {
                background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
                color: #dc2626;
                border-left: 4px solid #ef4444;
            }

            @media (max-width: 768px) {
                .auth-container {
                    flex-direction: column;
                }

                .auth-image-section {
                    min-height: 35vh;
                    flex: none;
                }

                .auth-image-title {
                    font-size: 2rem;
                }

                .auth-image-subtitle {
                    font-size: 1rem;
                }

                .auth-form-section {
                    padding: 1.5rem;
                }

                .brand-name {
                    font-size: 2rem;
                }

                .auth-title {
                    font-size: 1.5rem;
                }

                .otp-input {
                    width: 50px;
                    height: 50px;
                    font-size: 1.25rem;
                }

                .otp-input-container {
                    gap: 8px;
                }
            }

            @media (max-width: 576px) {
                .auth-image-section {
                    min-height: 25vh;
                }

                .auth-form-section {
                    padding: 1rem;
                }

                .auth-image-content {
                    padding: 1rem;
                }

                .auth-image-title {
                    font-size: 1.75rem;
                }

                .brand-name {
                    font-size: 1.75rem;
                }

                .auth-title {
                    font-size: 1.25rem;
                }

                .otp-input {
                    width: 45px;
                    height: 45px;
                    font-size: 1.1rem;
                }

                .otp-input-container {
                    gap: 6px;
                }
            }

            .d-none {
                display: none !important;
            }

            @keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(30px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            @keyframes fadeInLeft {
                from {
                    opacity: 0;
                    transform: translateX(-30px);
                }
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }

            @keyframes fadeInRight {
                from {
                    opacity: 0;
                    transform: translateX(30px);
                }
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }

            @keyframes slideInDown {
                from {
                    opacity: 0;
                    transform: translateY(-15px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            @keyframes modernShake {
                0%, 100% { transform: translateX(0); }
                25% { transform: translateX(-3px); }
                75% { transform: translateX(3px); }
            }

            .auth-image-content {
                animation: fadeInLeft 1s ease-out;
            }

            .auth-form-container {
                animation: fadeInRight 1s ease-out;
            }

            .otp-input-container {
                animation: fadeInUp 0.6s ease-out 0.2s both;
            }

            .resend-container {
                animation: fadeInUp 0.6s ease-out 0.3s both;
            }

            .auth-btn {
                animation: fadeInUp 0.6s ease-out 0.4s both;
            }

            .auth-link {
                animation: fadeInUp 0.6s ease-out 0.5s both;
            }
        </style>
        
    </head>
    <body>
        <div class="auth-container">
            <!-- Left Image Section -->
            <div class="auth-image-section">
                <img src="/images/back.png" alt="WEARiT Fashion" class="auth-image"
                     onerror="this.style.display='none'; this.parentElement.style.background='var(--gradient-primary)';">
                <div class="auth-image-content">
                    <h1 class="auth-image-title">Verify Your Email</h1>
                    <p class="auth-image-subtitle">
                        We've sent a secure verification code to your email. Enter the code below to complete your verification and access your account.
                    </p>
                </div>
            </div>

            <!-- Right Form Section -->
            <div class="auth-form-section">
                <div class="auth-form-container">
                    <div class="brand-logo">
                        <h1 class="brand-name">WEARiT</h1>
                        <p class="brand-tagline">Fashion that speaks your style</p>
                    </div>

                    <div class="auth-header">
                        <h1 class="auth-title">Verify OTP</h1>
                        <p class="auth-subtitle">
                            We've sent an email with a verification code to
                            <span class="email-highlight"><%= typeof email !== 'undefined' ? email : 'your email' %></span>
                        </p>
                    </div>

                    <!-- Flash Messages -->
                    <% if (typeof messages !== 'undefined' && messages.success_msg && messages.success_msg.length > 0) { %>
                        <div class="alert alert-success">
                            <i class="bi bi-check-circle me-2"></i><%= messages.success_msg[0] %>
                        </div>
                    <% } %>

                    <% if (typeof messages !== 'undefined' && messages.error_msg && messages.error_msg.length > 0) { %>
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i><%= messages.error_msg[0] %>
                        </div>
                    <% } %>

                    <% if (typeof messages !== 'undefined' && messages.error && messages.error.length > 0) { %>
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i><%= messages.error[0] %>
                        </div>
                    <% } %>

                    <form action="/verifyotp" method="POST" id="otpForm" novalidate>
                    <input
                        type="hidden"
                        name="email"
                        value="<%= typeof email !== 'undefined' ? email : '' %>"
                    />

                    <div class="otp-input-container">
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            autofocus
                            aria-label="First digit"
                        />
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            aria-label="Second digit"
                        />
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            aria-label="Third digit"
                        />
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            aria-label="Fourth digit"
                        />
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            aria-label="Fifth digit"
                        />
                        <input
                            type="text"
                            class="otp-input"
                            maxlength="1"
                            pattern="[0-9]"
                            inputmode="numeric"
                            aria-label="Sixth digit"
                        />
                        <input type="hidden" id="completeOtp" name="otp" />
                    </div>

                        <% if (typeof validationErrors !== 'undefined' && validationErrors.otp) { %>
                            <div class="invalid-feedback show" id="otpError"><%= validationErrors.otp %></div>
                        <% } else { %>
                            <div class="invalid-feedback" id="otpError"></div>
                        <% } %>

                        <div class="resend-container">
                            <p class="resend-text">
                                Send code again <span id="timer">01:00</span>
                            </p>
                            <p class="no-code">
                                I didn't receive a code
                                <button
                                    type="button"
                                    id="resendBtn"
                                    class="resend-btn"
                                    disabled
                                >
                                    Resend
                                </button>
                            </p>
                        </div>

                        <button type="submit" class="auth-btn" id="verifyBtn">
                            <span class="btn-text">Verify</span>
                            <span class="btn-spinner d-none">
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                Verifying...
                            </span>
                        </button>
                    </form>

                    <div class="auth-link">
                        <p><a href="/signup">
                            <i class="bi bi-arrow-left me-1"></i>Back to Sign Up
                        </a></p>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const inputs = document.querySelectorAll(".otp-input");
                const form = document.getElementById("otpForm");
                const completeOtpInput = document.getElementById("completeOtp");
                const resendBtn = document.getElementById("resendBtn");
                const timerElement = document.getElementById("timer");
                const verifyBtn = document.getElementById("verifyBtn");
                const btnText = verifyBtn.querySelector(".btn-text");
                const btnSpinner = verifyBtn.querySelector(".btn-spinner");
                const otpError = document.getElementById("otpError");

                let timeLeft = parseInt(localStorage.getItem("otpTimeLeft") || "60");
                let timerInterval;

                function updateTimer() {
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    timerElement.textContent = `${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

                    if (timeLeft <= 0) {
                        clearInterval(timerInterval);
                        resendBtn.disabled = false;
                        timerElement.textContent = "00:00";
                        localStorage.removeItem("otpTimeLeft");
                    } else {
                        timeLeft--;
                        localStorage.setItem("otpTimeLeft", timeLeft.toString());
                    }
                }

                function startTimer() {
                    updateTimer();
                    timerInterval = setInterval(updateTimer, 1000);
                    resendBtn.disabled = true;
                }

                function validateOTP() {
                    let otp = "";
                    inputs.forEach((input) => {
                        otp += input.value;
                    });

                    if (otp.length !== 6) {
                        showOTPError("Please enter all 6 digits of the OTP");
                        return false;
                    }

                    if (!/^\d{6}$/.test(otp)) {
                        showOTPError("OTP must contain only numbers");
                        return false;
                    }

                    hideOTPError();
                    return true;
                }

                function showOTPError(message) {
                    inputs.forEach(input => {
                        input.classList.add('is-invalid');
                        input.classList.remove('is-valid');
                    });

                    otpError.textContent = message;
                    otpError.style.display = 'block';
                    otpError.classList.add('show');
                    otpError.style.opacity = '0'
                    otpError.style.transform = 'translateY(-10px)'
                    setTimeout(() => {
                      otpError.style.transition = 'all 0.3s ease'
                      otpError.style.opacity = '1'
                      otpError.style.transform = 'translateY(0)'
                    }, 10)
                }

                function hideOTPError() {
                    inputs.forEach(input => {
                        input.classList.remove('is-invalid');
                        input.classList.add('is-valid');
                    });
                    otpError.style.transition = 'all 0.3s ease'
                    otpError.style.opacity = '0'
                    otpError.style.transform = 'translateY(-10px)'

                    setTimeout(() => {
                      otpError.textContent = ""
                      otpError.style.display = "none"
                      otpError.classList.remove("show")
                      otpError.style.transition = ''
                    }, 300)
                }

                function showLoadingState() {
                    verifyBtn.disabled = true;
                    btnText.classList.add('d-none');
                    btnSpinner.classList.remove('d-none');
                }

                function hideLoadingState() {
                    verifyBtn.disabled = false;
                    btnText.classList.remove('d-none');
                    btnSpinner.classList.add('d-none');
                }

                startTimer();
                inputs.forEach((input, index) => {
                    input.addEventListener("input", function () {
                        this.value = this.value.replace(/[^0-9]/g, '');
                        
                        if (this.value.length === 1) {
                            if (index < inputs.length - 1) {
                                inputs[index + 1].focus();
                            }
                        }
                        inputs.forEach(inp => {
                            inp.classList.remove('is-invalid', 'is-valid');
                        });
                        otpError.style.display = 'none';
                    });

                    input.addEventListener("keydown", function (e) {
                        if (e.key === "Backspace" && this.value === "" && index > 0) {
                            inputs[index - 1].focus();
                        }
                    });

                    input.addEventListener("paste", function (e) {
                        e.preventDefault();
                        const pasteData = e.clipboardData.getData("text").trim();
                        if (/^\d+$/.test(pasteData) && pasteData.length <= inputs.length) {
                            for (let i = 0; i < pasteData.length; i++) {
                                if (index + i < inputs.length) {
                                    inputs[index + i].value = pasteData[i];
                                    if (index + i === pasteData.length - 1) {
                                        inputs[index + i].focus();
                                    }
                                }
                            }
                        }
                    });
                });
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    if (!validateOTP()) {
                        inputs[0].focus();
                        return;
                    }

                    let otp = "";
                    inputs.forEach((input) => {
                        otp += input.value;
                    });

                    completeOtpInput.value = otp;
                    showLoadingState();
                    const formData = new URLSearchParams();
                    formData.append('email', document.querySelector('input[name="email"]').value);
                    formData.append('otp', otp);
                    
                    fetch('/verifyotp', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        hideLoadingState();
                        
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: data.message,
                                confirmButtonColor: '#667eea'
                            }).then(() => {
                                if (data.redirectUrl) {
                                    window.location.href = data.redirectUrl;
                                }
                            });
                        } else {
                            if (data.errors && data.errors.otp) {
                                showOTPError(data.errors.otp);
                            } else {
                                showOTPError(data.message || 'Invalid OTP. Please try again.');
                            }
                            inputs.forEach(input => {
                                input.value = '';
                            });
                            inputs[0].focus();
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        hideLoadingState();
                        
                        Swal.fire({
                            icon: 'error',
                            title: 'Connection Error',
                            text: 'Unable to connect to the server. Please check your internet connection and try again.',
                            confirmButtonColor: '#dc3545'
                        });
                    });
                });
                resendBtn.addEventListener("click", function () {
                    timeLeft = 60;
                    localStorage.setItem("otpTimeLeft", timeLeft.toString());
                    startTimer();
                    const formData = new URLSearchParams();
                    formData.append('email', document.querySelector('input[name="email"]').value);

                    fetch("/resendotp", {
                        method: "POST",
                        body: formData,
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                            "X-Requested-With": "XMLHttpRequest"
                        }
                    })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'OTP Resent!',
                                text: 'A new OTP has been sent to your email.',
                                timer: 2000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                            inputs.forEach(input => {
                                input.value = '';
                                input.classList.remove('is-invalid', 'is-valid');
                            });
                            otpError.style.display = 'none';
                            inputs[0].focus();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Failed to Resend',
                                text: data.message || 'Failed to resend OTP. Please try again.',
                                confirmButtonColor: '#dc3545'
                            });
                        }
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Connection Error',
                            text: 'An error occurred. Please try again.',
                            confirmButtonColor: '#dc3545'
                        });
                    });
                });
            });
        </script>
    </body>
</html>
