<!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8" />    <meta name="viewport" content="width=device-width, initial-scale=1.0" />    <title>WEARiT - Change Password</title>    <link        href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"        rel="stylesheet"    />    <link        rel="stylesheet"        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"    />    <link rel="stylesheet" href="/css/cart.css" />    <style>        .password-content {            background-color: #ffffff;            border-radius: 15px;            padding: 25px;            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);        }        .password-header {            display: flex;            justify-content: space-between;            align-items: center;            margin-bottom: 25px;            flex-wrap: wrap;            gap: 15px;        }        .password-title {            font-size: 24px;            font-weight: 600;            margin: 0;        }        .password-form {            margin-bottom: 20px;        }        .form-group {            margin-bottom: 20px;        }        .form-label {            font-weight: 500;            margin-bottom: 8px;        }        .password-toggle {            position: relative;        }        .toggle-icon {            position: absolute;            right: 15px;            top: 50%;            transform: translateY(-50%);            cursor: pointer;            color: #6c757d;        }        .password-requirements {            background-color: #f9f9f9;            border-radius: 10px;            padding: 20px;            margin-bottom: 30px;        }        .password-requirements h5 {            font-size: 16px;            font-weight: 600;            margin-bottom: 15px;        }        .password-requirements ul {            padding-left: 20px;            margin-bottom: 0;        }        .password-requirements li {            margin-bottom: 8px;            font-size: 14px;            color: #555;        }        .password-actions {            margin-top: 30px;            display: flex;            gap: 15px;            justify-content: flex-end;        }        .update-btn {            background-color: #000;            color: #fff;            padding: 10px 20px;            font-weight: 500;        }        .cancel-btn {            border: 1px solid #1a1a1a;            background-color: transparent;            color: #1a1a1a;            padding: 10px 20px;            font-weight: 500;        }        .validation-error {            color: #dc3545;            font-size: 13px;            margin-top: 5px;            display: none;        }        .form-control.is-invalid {            border-color: #dc3545;            background-image: none;        }        .form-control.is-valid {            border-color: #198754;            background-image: none;        }        #toastContainer {            position: fixed;            bottom: 20px;            right: 20px;            z-index: 1050;        }        .toast {            min-width: 250px;            margin-bottom: 10px;            background-color: #fff;            border-radius: 4px;            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);            overflow: hidden;        }        .toast-header {            display: flex;            align-items: center;            padding: 0.5rem 0.75rem;            background-color: rgba(0, 0, 0, 0.03);            border-bottom: 1px solid rgba(0, 0, 0, 0.05);        }        .toast-body {            padding: 0.75rem;        }        .toast-success {            border-left: 4px solid #28a745;        }        .toast-error {            border-left: 4px solid #dc3545;        }        .toast-warning {            border-left: 4px solid #ffc107;        }        .toast-info {            border-left: 4px solid #17a2b8;        }        @media (max-width: 767px) {            .password-actions {                flex-direction: column;            }            .update-btn,            .cancel-btn {                width: 100%;            }        }    </style></head><body>    <%- include('../partials/header') %>    <%- include('../partials/breadcrumb', {        breadcrumbs: [            { name: 'My Account', url: '/profile', icon: 'fa-solid fa-user' },            { name: 'Change Password', icon: 'fa-solid fa-lock' }        ]    }) %>    <div class="container-fluid cart-container">        <div class="row">            <div class="col-lg-3 col-md-4">                <%- include('../partials/navbar', { activePage: 'change-password', user: user }) %>            </div>            <div class="col-lg-9 col-md-8">                <div class="password-content">                    <div class="password-header">                        <h1 class="password-title">CHANGE PASSWORD</h1>                    </div>                    <% if(typeof error_msg !== 'undefined' && error_msg.length > 0) { %>                        <div class="alert alert-danger">                            <%= error_msg %>                        </div>                    <% } %>                    <% if(typeof success_msg !== 'undefined' && success_msg.length > 0) { %>                        <div class="alert alert-success">                            <%= success_msg %>                        </div>                    <% } %>                    <div class="password-form">                        <form action="/profile/change-password" method="POST" id="changePasswordForm" novalidate>                            <div class="form-group">                                <label for="currentPassword" class="form-label">Current Password</label>                                <div class="password-toggle">                                    <input type="password" id="currentPassword" name="currentPassword" class="form-control" required>                                    <span class="toggle-icon" onclick="togglePassword('currentPassword')">                                        <i class="fas fa-eye"></i>                                    </span>                                </div>                                <div class="validation-error" id="currentPassword-error">Please enter your current password</div>                            </div>                            <div class="form-group">                                <label for="newPassword" class="form-label">New Password</label>                                <div class="password-toggle">                                    <input type="password" id="newPassword" name="newPassword" class="form-control" required>                                    <span class="toggle-icon" onclick="togglePassword('newPassword')">                                        <i class="fas fa-eye"></i>                                    </span>                                </div>                                <div class="validation-error" id="newPassword-error">Please enter a new password that meets all requirements</div>                            </div>                            <div class="form-group">                                <label for="confirmPassword" class="form-label">Confirm New Password</label>                                <div class="password-toggle">                                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required>                                    <span class="toggle-icon" onclick="togglePassword('confirmPassword')">                                        <i class="fas fa-eye"></i>                                    </span>                                </div>                                <div class="validation-error" id="confirmPassword-error">Passwords do not match</div>                            </div>                            <div class="password-requirements">                                <h5>Password Requirements:</h5>                                <ul id="password-criteria">                                    <li id="length-check">At least 8 characters long</li>                                    <li id="uppercase-check">Must contain at least one uppercase letter</li>                                    <li id="lowercase-check">Must contain at least one lowercase letter</li>                                    <li id="number-check">Must contain at least one number</li>                                    <li id="special-check">Must contain at least one special character</li>                                </ul>                            </div>                            <div class="password-actions">                                <a href="/profile" class="btn cancel-btn">Cancel</a>                                <button type="submit" class="btn update-btn">Update Password</button>                            </div>                        </form>                    </div>                </div>            </div>        </div>    </div>    <div id="toastContainer"></div>    <%- include('../partials/footer') %>    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>    <script>        document.addEventListener("DOMContentLoaded", function() {            if (!document.getElementById("toastContainer")) {                const toastContainer = document.createElement("div");                toastContainer.id = "toastContainer";                document.body.appendChild(toastContainer);            }            function showToast(message, type = "success") {                const toastContainer = document.getElementById("toastContainer");                const toastId = `toast-${Date.now()}`;                const toastHTML = `                    <div id="${toastId}" class="toast toast-${type}">                        <div class="toast-header">                            <strong class="me-auto">${type === "success" ? "Success" : type === "error" ? "Error" : "Notification"}</strong>                            <button type="button" class="btn-close" onclick="closeToast('${toastId}')"></button>                        </div>                        <div class="toast-body">                            ${message}                        </div>                    </div>                `;                toastContainer.insertAdjacentHTML("beforeend", toastHTML);                const toastElement = document.getElementById(toastId);                setTimeout(() => {                    closeToast(toastId);                }, 5000);            }            window.closeToast = function(toastId) {                const toast = document.getElementById(toastId);                if (toast) {                    toast.style.opacity = "0";                    setTimeout(() => {                        toast.remove();                    }, 300);                }            };            window.togglePassword = function(inputId) {                const passwordInput = document.getElementById(inputId);                const toggleIcon = passwordInput.nextElementSibling.querySelector('i');                if (passwordInput.type === 'password') {                    passwordInput.type = 'text';                    toggleIcon.classList.remove('fa-eye');                    toggleIcon.classList.add('fa-eye-slash');                } else {                    passwordInput.type = 'password';                    toggleIcon.classList.remove('fa-eye-slash');                    toggleIcon.classList.add('fa-eye');                }            };            const form = document.getElementById('changePasswordForm');            const currentPasswordInput = document.getElementById('currentPassword');            const newPasswordInput = document.getElementById('newPassword');            const confirmPasswordInput = document.getElementById('confirmPassword');            const lengthCheck = document.getElementById('length-check');            const uppercaseCheck = document.getElementById('uppercase-check');            const lowercaseCheck = document.getElementById('lowercase-check');            const numberCheck = document.getElementById('number-check');            const specialCheck = document.getElementById('special-check');            newPasswordInput.addEventListener('input', function() {                const password = this.value;                if (password.length >= 8) {                    lengthCheck.classList.add('text-success');                    lengthCheck.innerHTML = '✓ At least 8 characters long';                } else {                    lengthCheck.classList.remove('text-success');                    lengthCheck.innerHTML = 'At least 8 characters long';                }                if (/[A-Z]/.test(password)) {                    uppercaseCheck.classList.add('text-success');                    uppercaseCheck.innerHTML = '✓ Must contain at least one uppercase letter';                } else {                    uppercaseCheck.classList.remove('text-success');                    uppercaseCheck.innerHTML = 'Must contain at least one uppercase letter';                }                if (/[a-z]/.test(password)) {                    lowercaseCheck.classList.add('text-success');                    lowercaseCheck.innerHTML = '✓ Must contain at least one lowercase letter';                } else {                    lowercaseCheck.classList.remove('text-success');                    lowercaseCheck.innerHTML = 'Must contain at least one lowercase letter';                }                if (/\d/.test(password)) {                    numberCheck.classList.add('text-success');                    numberCheck.innerHTML = '✓ Must contain at least one number';                } else {                    numberCheck.classList.remove('text-success');                    numberCheck.innerHTML = 'Must contain at least one number';                }                if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {                    specialCheck.classList.add('text-success');                    specialCheck.innerHTML = '✓ Must contain at least one special character';                } else {                    specialCheck.classList.remove('text-success');                    specialCheck.innerHTML = 'Must contain at least one special character';                }                if (confirmPasswordInput.value) {                    validatePasswordMatch();                }            });            confirmPasswordInput.addEventListener('input', validatePasswordMatch);            function validatePasswordMatch() {                if (newPasswordInput.value === confirmPasswordInput.value) {                    confirmPasswordInput.classList.remove('is-invalid');                    confirmPasswordInput.classList.add('is-valid');                    document.getElementById('confirmPassword-error').style.display = 'none';                } else {                    confirmPasswordInput.classList.remove('is-valid');                    confirmPasswordInput.classList.add('is-invalid');                    document.getElementById('confirmPassword-error').style.display = 'block';                }            }            form.addEventListener('submit', function(event) {                let isValid = true;                if (!currentPasswordInput.value.trim()) {                    currentPasswordInput.classList.add('is-invalid');                    document.getElementById('currentPassword-error').style.display = 'block';                    isValid = false;                } else {                    currentPasswordInput.classList.remove('is-invalid');                    document.getElementById('currentPassword-error').style.display = 'none';                }                const password = newPasswordInput.value;                const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*(),.?":{}|<>])[A-Za-z\d!@#$%^&*(),.?":{}|<>]{8,}$/;                if (!passwordRegex.test(password)) {                    newPasswordInput.classList.add('is-invalid');                    document.getElementById('newPassword-error').style.display = 'block';                    isValid = false;                } else {                    newPasswordInput.classList.remove('is-invalid');                    document.getElementById('newPassword-error').style.display = 'none';                }                if (newPasswordInput.value !== confirmPasswordInput.value) {                    confirmPasswordInput.classList.add('is-invalid');                    document.getElementById('confirmPassword-error').style.display = 'block';                    isValid = false;                } else {                    confirmPasswordInput.classList.remove('is-invalid');                    document.getElementById('confirmPassword-error').style.display = 'none';                }                if (!isValid) {                    event.preventDefault();                    showToast('Please fix the errors in the form', 'error');                }            });        });    </script></body></html>