<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Forgot Password - WEARiT</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            rel="stylesheet"
        />
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css"
        />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <style>
            body {
                font-family: "Inter", sans-serif;
                height: 100vh;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
            }

            .card {
                max-width: 450px;
                width: 100%;
                padding: 40px;
                border-radius: 16px;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
                background: white;
                border: none;
            }

            .brand-logo {
                text-align: center;
                margin-bottom: 30px;
            }

            .brand-name {
                font-size: 32px;
                font-weight: 700;
                color: #333;
                margin: 0;
            }

            .brand-tagline {
                color: #666;
                font-size: 14px;
                margin: 5px 0 0 0;
            }

            .form-title {
                text-align: center;
                margin-bottom: 30px;
                color: #333;
                font-weight: 600;
            }

            .form-subtitle {
                text-align: center;
                color: #666;
                font-size: 14px;
                margin-bottom: 30px;
            }

            .form-control {
                border: 2px solid #e1e5e9;
                border-radius: 8px;
                padding: 12px 16px;
                font-size: 16px;
                transition: all 0.3s ease;
            }

            .form-control:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            }

            .form-control.is-invalid {
                border-color: #dc3545;
                animation: shake 0.5s ease-in-out;
            }

            .form-control.is-valid {
                border-color: #28a745;
            }

            .input-group-text {
                background: #f8f9fa;
                border: 2px solid #e1e5e9;
                border-right: none;
                color: #666;
            }

            .input-group .form-control {
                border-left: none;
            }

            .input-group:focus-within .input-group-text {
                border-color: #667eea;
                background: #f0f2ff;
            }

            .btn-primary {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                border: none;
                border-radius: 8px;
                padding: 12px 24px;
                font-weight: 600;
                font-size: 16px;
                transition: all 0.3s ease;
            }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
            }

            .invalid-feedback {
                display: block;
                font-size: 14px;
                margin-top: 5px;
            }

            .back-link {
                text-align: center;
                margin-top: 20px;
            }

            .back-link a {
                color: #667eea;
                text-decoration: none;
                font-weight: 500;
            }

            .back-link a:hover {
                text-decoration: underline;
            }

            @keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
                20%, 40%, 60%, 80% { transform: translateX(5px); }
            }

            .alert {
                border-radius: 8px;
                margin-bottom: 20px;
            }
        </style>
    </head>
    <body>
        <div class="card">
            <div class="brand-logo">
                <h1 class="brand-name">WEARiT</h1>
                <p class="brand-tagline">Fashion that speaks your style</p>
            </div>

            <h2 class="form-title">Forgot Password?</h2>
            <p class="form-subtitle">Enter your email address and we'll send you an OTP to reset your password</p>

            <!-- Flash Messages -->
            <% if (typeof messages !== 'undefined' && messages.success_msg && messages.success_msg.length > 0) { %>
                <div class="alert alert-success">
                    <i class="bi bi-check-circle me-2"></i><%= messages.success_msg[0] %>
                </div>
            <% } %>
            
            <% if (typeof messages !== 'undefined' && messages.error_msg && messages.error_msg.length > 0) { %>
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i><%= messages.error_msg[0] %>
                </div>
            <% } %>

            <% if (typeof messages !== 'undefined' && messages.error && messages.error.length > 0) { %>
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i><%= messages.error[0] %>
                </div>
            <% } %>

            <form action="/forgetpassword" method="POST" id="forgetPasswordForm" novalidate>
                <div class="mb-3">
                    <label for="email" class="form-label">Email Address</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-envelope"></i>
                        </span>
                        <input
                            type="email"
                            name="email"
                            id="email"
                            class="form-control <%= typeof validationErrors !== 'undefined' && validationErrors.email ? 'is-invalid' : '' %>"
                            placeholder="Enter your registered email"
                            value="<%= typeof formData !== 'undefined' && formData.email ? formData.email : '' %>"
                            required
                            aria-describedby="emailError"
                            autocomplete="email"
                        />
                    </div>
                    <% if (typeof validationErrors !== 'undefined' && validationErrors.email) { %>
                        <div class="invalid-feedback" id="emailError"><%= validationErrors.email %></div>
                    <% } else { %>
                        <div class="invalid-feedback" id="emailError"></div>
                    <% } %>
                </div>

                <button type="submit" class="btn btn-primary w-100" id="submitBtn">
                    <span class="btn-text">Send OTP</span>
                    <span class="btn-spinner d-none">
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        Sending...
                    </span>
                </button>
            </form>

            <div class="back-link">
                <a href="/login">
                    <i class="bi bi-arrow-left me-1"></i>Back to Login
                </a>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const form = document.getElementById('forgetPasswordForm');
                const emailInput = document.getElementById('email');
                const submitBtn = document.getElementById('submitBtn');
                const btnText = submitBtn.querySelector('.btn-text');
                const btnSpinner = submitBtn.querySelector('.btn-spinner');
                const emailError = document.getElementById('emailError');

                // Email validation
                function validateEmail() {
                    const email = emailInput.value.trim();
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                    if (!email) {
                        showFieldError(emailInput, emailError, 'Email is required');
                        return false;
                    }

                    if (!emailRegex.test(email)) {
                        showFieldError(emailInput, emailError, 'Please enter a valid email address');
                        return false;
                    }

                    hideFieldError(emailInput, emailError);
                    return true;
                }

                function showFieldError(input, errorElement, message) {
                    input.classList.add('is-invalid');
                    input.classList.remove('is-valid');
                    errorElement.textContent = message;
                    errorElement.style.display = 'block';
                }

                function hideFieldError(input, errorElement) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    errorElement.textContent = '';
                    errorElement.style.display = 'none';
                }

                function showLoadingState() {
                    submitBtn.disabled = true;
                    btnText.classList.add('d-none');
                    btnSpinner.classList.remove('d-none');
                }

                function hideLoadingState() {
                    submitBtn.disabled = false;
                    btnText.classList.remove('d-none');
                    btnSpinner.classList.add('d-none');
                }

                // Real-time validation
                emailInput.addEventListener('input', function() {
                    if (this.value.trim()) {
                        validateEmail();
                    } else {
                        this.classList.remove('is-valid', 'is-invalid');
                        emailError.style.display = 'none';
                    }
                });

                emailInput.addEventListener('blur', validateEmail);

                // Form submission
                form.addEventListener('submit', function(e) {
                    e.preventDefault();

                    if (!validateEmail()) {
                        emailInput.focus();
                        return;
                    }

                    showLoadingState();

                    // FIXED: Use URLSearchParams instead of FormData
                    const formData = new URLSearchParams();
                    formData.append('email', emailInput.value.trim());
                    
                    fetch('/forgetpassword', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        hideLoadingState();
                        
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: data.message,
                                confirmButtonColor: '#667eea'
                            }).then(() => {
                                if (data.redirectUrl) {
                                    window.location.href = data.redirectUrl;
                                }
                            });
                        } else {
                            if (data.errors && data.errors.email) {
                                showFieldError(emailInput, emailError, data.errors.email);
                            }
                            
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'Something went wrong. Please try again.',
                                confirmButtonColor: '#dc3545'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        hideLoadingState();
                        
                        Swal.fire({
                            icon: 'error',
                            title: 'Connection Error',
                            text: 'Unable to connect to the server. Please check your internet connection and try again.',
                            confirmButtonColor: '#dc3545'
                        });
                    });
                });
            });
        </script>
    </body>
</html>
